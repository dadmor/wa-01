import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
// src/pages/teacher/ui.Dashboard.tsx
import { useFetch } from '@/pages/api/hooks';
import { useAuth } from '@/hooks/useAuth';
import { Link } from 'react-router-dom';
import { TeacherPageLayout } from '@/components/layout/TeacherPageLayout';
export const routeConfig = { path: "/teacher/dashboard", title: "Teacher Dashboard" };
export default function TeacherDashboard() {
    const { user } = useAuth();
    const { data: lessons } = useFetch('teacher-lessons', `lessons?author_id=eq.${user?.id}`);
    const { data: students } = useFetch('students', `users?role=eq.student`);
    const { data: allTasks } = useFetch('teacher-tasks', `tasks?lesson_id=in.(${lessons?.map(l => l.id).join(',') || 'null'})`);
    const { data: allArticles } = useFetch('teacher-articles', `articles?lesson_id=in.(${lessons?.map(l => l.id).join(',') || 'null'})`);
    const { data: recentProgress } = useFetch('recent-progress', `progress?lesson_id=in.(${lessons?.map(l => l.id).join(',') || 'null'})&order=completed_at.desc&limit=10`);
    const totalQuizzes = allTasks?.length || 0;
    const totalArticles = allArticles?.length || 0;
    const avgScore = recentProgress?.length ?
        Math.round(recentProgress.reduce((sum, p) => sum + p.score, 0) / recentProgress.length) : 0;
    return (_jsxs(TeacherPageLayout, { showPadding: true, title: "Uczniowie", subtitle: "Lista uczni\u00F3w", children: [_jsx("div", { className: "card bg-base-100 shadow-sm", children: _jsxs("div", { className: "card-body py-4", children: [_jsxs("h1", { className: "card-title text-2xl", children: [_jsx("span", { className: "text-primary", children: "\uD83D\uDC69\u200D\uD83C\uDFEB" }), "Panel nauczyciela"] }), _jsxs("p", { className: "text-base-content/70", children: ["Witaj ", user?.username, "!"] })] }) }), _jsxs("div", { className: "grid grid-cols-2 md:grid-cols-4 gap-4", children: [_jsx("div", { className: "card bg-base-100 shadow-sm", children: _jsxs("div", { className: "card-body py-6 text-center", children: [_jsx("div", { className: "text-3xl font-bold text-primary", children: lessons?.length || 0 }), _jsx("div", { className: "text-sm opacity-70", children: "Moje lekcje" })] }) }), _jsx("div", { className: "card bg-base-100 shadow-sm", children: _jsxs("div", { className: "card-body py-6 text-center", children: [_jsx("div", { className: "text-3xl font-bold text-accent", children: totalArticles }), _jsx("div", { className: "text-sm opacity-70", children: "Tre\u015Bci" })] }) }), _jsx("div", { className: "card bg-base-100 shadow-sm", children: _jsxs("div", { className: "card-body py-6 text-center", children: [_jsx("div", { className: "text-3xl font-bold text-info", children: totalQuizzes }), _jsx("div", { className: "text-sm opacity-70", children: "Quizy" })] }) }), _jsx("div", { className: "card bg-base-100 shadow-sm", children: _jsxs("div", { className: "card-body py-6 text-center", children: [_jsx("div", { className: "text-3xl font-bold text-secondary", children: students?.length || 0 }), _jsx("div", { className: "text-sm opacity-70", children: "Uczniowie" })] }) })] }), _jsxs("div", { className: "grid md:grid-cols-3 gap-6", children: [_jsx("div", { className: "card bg-base-100 shadow-sm", children: _jsxs("div", { className: "card-body", children: [_jsx("h2", { className: "card-title text-lg mb-4", children: "\uD83D\uDCDD Szybkie akcje" }), _jsxs("div", { className: "space-y-3", children: [_jsx(Link, { to: "/teacher/lessons/create", className: "btn btn-primary w-full", children: "\u2795 Nowa lekcja" }), _jsx(Link, { to: "/teacher/lessons", className: "btn btn-outline w-full", children: "\uD83D\uDCDA Zarz\u0105dzaj lekcjami" }), _jsx(Link, { to: "/teacher/students", className: "btn btn-outline w-full", children: "\uD83D\uDC65 Lista uczni\u00F3w" })] })] }) }), _jsx("div", { className: "card bg-base-100 shadow-sm", children: _jsxs("div", { className: "card-body", children: [_jsx("h2", { className: "card-title text-lg mb-4", children: "\uD83D\uDCCA Moje lekcje" }), _jsxs("div", { className: "space-y-2 max-h-64 overflow-y-auto", children: [lessons?.slice(0, 6).map(lesson => (_jsxs(Link, { to: `/teacher/lessons/${lesson.id}`, className: "block p-3 bg-base-200 rounded-lg hover:bg-base-300 transition-colors", children: [_jsx("div", { className: "font-medium text-sm", children: lesson.title }), _jsxs("div", { className: "text-xs opacity-70 flex gap-2 mt-1", children: [_jsx("span", { children: lesson.subject }), _jsx("span", { children: "\u2022" }), _jsx("span", { children: lesson.grade })] })] }, lesson.id))), lessons?.length === 0 && (_jsxs("div", { className: "text-center py-8 text-base-content/50", children: [_jsx("p", { className: "mb-2", children: "Brak lekcji" }), _jsx(Link, { to: "/teacher/lessons/create", className: "link link-primary text-sm", children: "Utw\u00F3rz pierwsz\u0105 lekcj\u0119" })] }))] })] }) }), _jsx("div", { className: "card bg-base-100 shadow-sm", children: _jsxs("div", { className: "card-body", children: [_jsx("h2", { className: "card-title text-lg mb-4", children: "\uD83C\uDFAF Ostatnie wyniki" }), avgScore > 0 && (_jsx("div", { className: "card bg-base-200 shadow-sm mb-4", children: _jsxs("div", { className: "card-body py-3 text-center", children: [_jsxs("div", { className: "text-2xl font-bold text-success", children: [avgScore, "%"] }), _jsx("div", { className: "text-xs opacity-70", children: "\u015Aredni wynik" })] }) })), _jsxs("div", { className: "space-y-2 max-h-48 overflow-y-auto", children: [recentProgress?.slice(0, 5).map(progress => {
                                            const lesson = lessons?.find(l => l.id === progress.lesson_id);
                                            return (_jsxs("div", { className: "p-3 bg-base-200 rounded-lg", children: [_jsx("div", { className: "font-medium text-sm", children: lesson?.title || 'Nieznana lekcja' }), _jsxs("div", { className: "text-xs opacity-70 flex justify-between mt-1", children: [_jsxs("span", { children: ["Wynik: ", progress.score, "%"] }), _jsxs("span", { children: [progress.correct_tasks, "/", progress.total_tasks] })] })] }, `${progress.user_id}-${progress.lesson_id}`));
                                        }), (!recentProgress || recentProgress.length === 0) && (_jsx("div", { className: "text-center py-8 text-base-content/50", children: _jsx("p", { className: "text-sm", children: "Brak aktywno\u015Bci uczni\u00F3w" }) }))] })] }) })] }), _jsx("div", { className: "card bg-base-100 shadow-sm", children: _jsxs("div", { className: "card-body", children: [_jsx("h2", { className: "card-title text-lg mb-4", children: "\uD83D\uDCC8 Podsumowanie" }), _jsxs("div", { className: "grid grid-cols-2 md:grid-cols-4 gap-4", children: [_jsxs("div", { className: "text-center", children: [_jsx("div", { className: "text-2xl font-bold text-primary", children: lessons?.length || 0 }), _jsx("div", { className: "text-sm opacity-70", children: "Utworzonych lekcji" })] }), _jsxs("div", { className: "text-center", children: [_jsx("div", { className: "text-2xl font-bold text-accent", children: totalArticles }), _jsx("div", { className: "text-sm opacity-70", children: "Tre\u015Bci napisanych" })] }), _jsxs("div", { className: "text-center", children: [_jsx("div", { className: "text-2xl font-bold text-info", children: totalQuizzes }), _jsx("div", { className: "text-sm opacity-70", children: "Quiz\u00F3w przygotowanych" })] }), _jsxs("div", { className: "text-center", children: [_jsx("div", { className: "text-2xl font-bold text-secondary", children: recentProgress?.reduce((sum, p) => sum + p.attempts_count, 0) || 0 }), _jsx("div", { className: "text-sm opacity-70", children: "Rozwi\u0105za\u0144 uczni\u00F3w" })] })] })] }) })] }));
}
